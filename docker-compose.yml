version: '3'
services:
  zookeeper:
    container_name: d-banco-zookeeper
    image: confluentinc/cp-zookeeper:latest
    networks:
      - d-banco-backend
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    container_name: d-banco-kafka
    image: confluentinc/cp-kafka:latest
    networks:
      - d-banco-backend
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    container_name: d-banco-kafdrop
    image: obsidiandynamics/kafdrop:latest
    networks:
      - d-banco-backend
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  db-conta:
    container_name: d-banco-db-conta
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
      - ./.Docker/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d/init-user-db.sh
    ports:
      - "5432:5432"
    networks:
      - d-banco-backend
    restart: always

  db-transacao:
    container_name: d-banco-db-transacao
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
      - ./.Docker/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d/init-user-db.sh
    ports:
      - "5433:5432"
    networks:
      - d-banco-backend
    restart: always

networks:
  d-banco-backend:
    driver: bridge

volumes:
  postgres: